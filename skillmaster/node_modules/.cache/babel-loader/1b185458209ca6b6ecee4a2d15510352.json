{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\SkillMaster_CloudProject\\\\skillmaster\\\\src\\\\Components\\\\creator.js\";\nimport React, { Component } from 'react';\nimport { useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport Footer from \"../Components/footer\";\nimport { useState, useEffect } from 'react';\nimport '../Components/question.css';\nimport '../Components/creatorcss.css';\nimport { UserContext } from \"../providers/UserProvider\";\nimport firebase from \"firebase/app\";\nimport { auth } from \"../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nrequire('firebase/auth');\n\nrequire('firebase/database');\n\nrequire('firebase/storage');\n\nconst storage = firebase.storage();\nconst timeStamp = Date.now();\n\nclass Creator extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleQuestionChange = event => {\n      this.setState({\n        question: event.target.value\n      });\n    };\n\n    this.handleoptionOneChange = event => {\n      this.setState({\n        optionOne: event.target.value\n      });\n    };\n\n    this.handleoptionTwoChange = event => {\n      this.setState({\n        optionTwo: event.target.value\n      });\n    };\n\n    this.handleoptionThreeChange = event => {\n      this.setState({\n        optionThree: event.target.value\n      });\n    };\n\n    this.handleoptionFourChange = event => {\n      this.setState({\n        optionFour: event.target.value\n      });\n    };\n\n    this.handleQuestionImageChange = e => {\n      this.setState({\n        status: \"Image Linked !\"\n      });\n\n      if (e.target.files[0]) {\n        const image = e.target.files[0];\n        this.setState(() => ({\n          image\n        }));\n      }\n    };\n\n    this.handleQuestionImageUpload = event => {\n      this.setState({\n        status: \"preparing image to upload Image !\"\n      });\n      this.setState({\n        progress: 30\n      });\n      event.preventDefault();\n      const {\n        image\n      } = this.state;\n      const uploadTask = storage.ref(`/images/${timeStamp}`).put(image);\n      uploadTask.on(\"state_changed\", snapshot => {\n        // progress function ...\n        const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n        this.setState({\n          progress\n        });\n      }, error => {\n        // Error function ...\n        console.log(error);\n      }, () => {\n        // complete function ...\n        uploadTask.snapshot.ref.getDownloadURL().then(downloadURL => {\n          console.log('File available at', downloadURL);\n          this.setState({\n            status: \"ImageURL created !\"\n          });\n          this.setState({\n            url: downloadURL\n          });\n          this.handleQuestionUpload();\n        });\n      });\n    };\n\n    this.handleQuestionUpload = event => {\n      let quiz = \"\";\n      quiz = this.state.quiz;\n      let question = \"\";\n      question = this.state.question;\n      let url = \"\";\n      url = this.state.url;\n      let optionOne = \"\";\n      optionOne = this.state.optionOne;\n      let optionTwo = \"\";\n      optionTwo = this.state.optionTwo;\n      let optionThree = \"\";\n      optionThree = this.state.optionThree;\n      let optionFour = \"\";\n      optionFour = this.state.optionFour;\n      this.setState({\n        status: \"Preparing Question to Upload !\"\n      });\n      this.setState({\n        progress: 15\n      });\n      auth.onAuthStateChanged(userAuth => {\n        this.setState({\n          progress: 30\n        });\n        let number = 0,\n            quiz = this.state.quiz;\n        let userref = firebase.database().ref('/users/' + userAuth.uid + '/public/' + this.state.quiz + '/');\n        let userQref = firebase.database().ref('/users/' + userAuth.uid + '/public/' + this.state.quiz + '/q/');\n\n        if (this.state.public) {\n          this.setState({\n            status: \"Question being Uploaded !\"\n          });\n          this.setState({\n            progress: 40\n          });\n          console.log(\"public\");\n          let publicref = firebase.database().ref('/public/' + this.state.quiz + '/');\n          let publicQref = firebase.database().ref('/public/' + this.state.quiz + '/q');\n          publicQref.once(\"value\").then(function (snapshot) {\n            number = snapshot.numChildren() + 1;\n            publicref.update({\n              by: userAuth.displayName,\n              contactMail: userAuth.email,\n              timeStamp: timeStamp,\n              quizName: quiz,\n              views: 0\n            });\n          }).then(e => {\n            let questionnumber = \"question\" + number;\n            publicQref.child('/question' + number).update({\n              question: question,\n              questionImageURL: url,\n              optionOne: optionOne,\n              optionTwo: optionTwo,\n              optionThree: optionThree,\n              optionFour: optionFour,\n              questionnumber: questionnumber\n            });\n            this.setState({\n              status: \"Attaching Nodes to Question !\"\n            });\n            this.setState({\n              progress: 70\n            });\n          });\n        }\n\n        if (!this.state.public) {\n          userref = firebase.database().ref('/users/' + userAuth.uid + '/private/' + this.state.quiz + '/');\n          userQref = firebase.database().ref('/users/' + userAuth.uid + '/private/' + this.state.quiz + '/q/');\n        }\n\n        userQref.once(\"value\").then(function (snapshot) {\n          console.log(snapshot.numChildren());\n          number = snapshot.numChildren() + 1;\n          userref.update({\n            by: userAuth.displayName,\n            contactMail: userAuth.email,\n            timeStamp: timeStamp,\n            quizName: quiz\n          });\n        }).then(() => {\n          let questionnumber = \"question\" + number;\n          userQref.child('question' + number).update({\n            question: question,\n            questionImageURL: url,\n            optionOne: optionOne,\n            optionTwo: optionTwo,\n            optionThree: optionThree,\n            optionFour: optionFour,\n            questionnumber: questionnumber\n          }).finally(() => {\n            this.setState({\n              status: \"Question Saved !\"\n            });\n            this.setState({\n              progress: 100\n            });\n            this.setState({\n              uploaded: true\n            });\n            this.setState({\n              currentQ: number\n            });\n          }); //console.log(error)\n        });\n      });\n    };\n\n    this.handleQuizChange = event => {\n      let vs = \"\";\n      vs = event.target.value;\n      vs = vs.trim();\n      vs = vs.replace(/[^a-zA-Z ]/g, \"\");\n      this.setState({\n        quiz: vs\n      });\n    };\n\n    this.handlePublicAssignment = event => {\n      if (this.state.public) {\n        this.setState({\n          public: false\n        });\n      } else {\n        this.setState({\n          public: true\n        });\n      }\n    };\n\n    this.handlepopup = () => {\n      this.setState({\n        uploaded: false\n      });\n    };\n\n    this.state = {\n      quiz: '',\n      optionOne: '',\n      optionTwo: '',\n      optionThree: '',\n      optionFour: '',\n      question: '',\n      image: null,\n      url: \"\",\n      progress: 0,\n      status: '',\n      uploaded: false,\n      public: false,\n      currentQ: 0,\n      showQuizes: false\n    };\n  }\n\n  componentDidMount() {\n    auth.onAuthStateChanged(user => {\n      this.setState({\n        name: user.displayName\n      });\n      let quizrefer = firebase.database().ref('/quizes/');\n      let uid = user.uid;\n      this.setState({\n        auth: uid\n      });\n      quizrefer.on(\"value\", snapshot => {\n        let publicquizlist = [];\n        snapshot.forEach(snap => {\n          // console.log(snap.val())\n          // console.log(snapshot)\n          publicquizlist.push(snap.val());\n        });\n        this.setState({\n          publicquizlist: publicquizlist\n        });\n        this.setState({\n          showQuizes: true\n        });\n      });\n    });\n  }\n\n  handleQuizChoose(name) {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \" mx-5 mt-5 pt-3 \",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Quizes Active Now ::\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.state.showQuizes ? /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"row\",\n            children: this.state.publicquizlist.map(data => {\n              return /*#__PURE__*/_jsxDEV(Link, {\n                className: \"boxm m-3 p-3\",\n                to: `/Details/${data.quizName}`,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    children: data.quizName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 297,\n                    columnNumber: 39\n                  }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: data.by\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 39\n                  }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: data.by\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 299,\n                    columnNumber: 39\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 11\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nCreator.contextType = UserContext;\nexport default Creator;","map":{"version":3,"sources":["C:/Users/USER/SkillMaster_CloudProject/skillmaster/src/Components/creator.js"],"names":["React","Component","useContext","Redirect","Link","Footer","useState","useEffect","UserContext","firebase","auth","require","storage","timeStamp","Date","now","Creator","constructor","props","handleQuestionChange","event","setState","question","target","value","handleoptionOneChange","optionOne","handleoptionTwoChange","optionTwo","handleoptionThreeChange","optionThree","handleoptionFourChange","optionFour","handleQuestionImageChange","e","status","files","image","handleQuestionImageUpload","progress","preventDefault","state","uploadTask","ref","put","on","snapshot","Math","round","bytesTransferred","totalBytes","error","console","log","getDownloadURL","then","downloadURL","url","handleQuestionUpload","quiz","onAuthStateChanged","userAuth","number","userref","database","uid","userQref","public","publicref","publicQref","once","numChildren","update","by","displayName","contactMail","email","quizName","views","questionnumber","child","questionImageURL","finally","uploaded","currentQ","handleQuizChange","vs","trim","replace","handlePublicAssignment","handlepopup","showQuizes","componentDidMount","user","name","quizrefer","publicquizlist","forEach","snap","push","val","handleQuizChoose","render","map","data","contextType"],"mappings":"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","sourcesContent":["\r\n\r\n\r\n\r\nimport React, { Component } from 'react'\r\nimport { useContext } from 'react';\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Link } from 'react-router-dom'\r\nimport Footer from \"../Components/footer\"\r\nimport { useState, useEffect } from 'react';\r\nimport '../Components/question.css'\r\nimport '../Components/creatorcss.css'\r\nimport { UserContext } from \"../providers/UserProvider\";\r\nimport firebase from \"firebase/app\";\r\nimport { auth } from \"../firebase\"\r\n\r\nrequire('firebase/auth');\r\nrequire('firebase/database');\r\nrequire('firebase/storage');\r\n\r\nconst storage = firebase.storage();\r\nconst timeStamp = Date.now()\r\nclass Creator extends Component {\r\n\r\n\r\n  static contextType = UserContext;\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      quiz: '',\r\n      optionOne: '',\r\n      optionTwo: '',\r\n      optionThree: '',\r\n      optionFour: '',\r\n      question: '',\r\n      image: null,\r\n      url: \"\",\r\n      progress: 0,\r\n      status :'',\r\n      uploaded: false,\r\n      public: false,\r\n      currentQ: 0,\r\n      showQuizes:false\r\n    }\r\n  }\r\n  handleQuestionChange = (event) => {\r\n    this.setState({\r\n      question: event.target.value\r\n    });\r\n\r\n  }\r\n\r\n  handleoptionOneChange = (event) => {\r\n    this.setState({\r\n      optionOne: event.target.value\r\n    });\r\n\r\n  }\r\n\r\n  handleoptionTwoChange = (event) => {\r\n    this.setState({\r\n      optionTwo: event.target.value\r\n    });\r\n\r\n  }\r\n\r\n  handleoptionThreeChange = (event) => {\r\n    this.setState({\r\n      optionThree: event.target.value\r\n    });\r\n\r\n  }\r\n\r\n  handleoptionFourChange = (event) => {\r\n    this.setState({\r\n      optionFour: event.target.value\r\n    });\r\n\r\n  }\r\n  handleQuestionImageChange = e => {\r\n    \r\n    this.setState({ status: \"Image Linked !\" });\r\n    if (e.target.files[0]) {\r\n      const image = e.target.files[0];\r\n      this.setState(() => ({ image }));\r\n    }\r\n  };\r\n  handleQuestionImageUpload = (event) => {\r\n    \r\n    this.setState({ status: \"preparing image to upload Image !\" });\r\n    this.setState({ progress: 30 });\r\n    event.preventDefault();\r\n    const { image } = this.state;\r\n    const uploadTask = storage.ref(`/images/${timeStamp}`).put(image);\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      snapshot => {\r\n        // progress function ...\r\n        const progress = Math.round(\r\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n        );\r\n        this.setState({ progress });\r\n      },\r\n      error => {\r\n        // Error function ...\r\n        console.log(error);\r\n      },\r\n      () => {\r\n        // complete function ...\r\n        uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\r\n          console.log('File available at', downloadURL);\r\n          \r\n        this.setState({ status: \"ImageURL created !\" });\r\n          this.setState({ url: downloadURL });\r\n          this.handleQuestionUpload()\r\n        });\r\n      }\r\n    );\r\n  };\r\n  handleQuestionUpload = (event) => {\r\n\r\n    let quiz = \"\"\r\n    quiz = this.state.quiz\r\n    let question = \"\"\r\n    question = this.state.question\r\n    let url = \"\"\r\n    url = this.state.url\r\n    let optionOne = \"\"\r\n    optionOne = this.state.optionOne\r\n    let optionTwo = \"\"\r\n    optionTwo = this.state.optionTwo\r\n    let optionThree = \"\"\r\n    optionThree = this.state.optionThree\r\n    let optionFour = \"\"\r\n    optionFour = this.state.optionFour\r\n    \r\n    this.setState({ status: \"Preparing Question to Upload !\" });\r\n    this.setState({ progress: 15 });\r\n    auth.onAuthStateChanged(userAuth => {\r\n      this.setState({ progress: 30 });\r\n      let number = 0,quiz=this.state.quiz;\r\n      let userref = firebase.database().ref('/users/' + userAuth.uid + '/public/' + this.state.quiz + '/')\r\n      let userQref = firebase.database().ref('/users/' + userAuth.uid + '/public/' + this.state.quiz + '/q/')\r\n      if (this.state.public) {\r\n        \r\n    this.setState({ status: \"Question being Uploaded !\" });\r\n        this.setState({ progress: 40 });\r\n        console.log(\"public\")\r\n        let publicref = firebase.database().ref('/public/' + this.state.quiz + '/')\r\n        let publicQref = firebase.database().ref('/public/' + this.state.quiz + '/q')\r\n        publicQref.once(\"value\").then(function (snapshot) {\r\n\r\n          number = snapshot.numChildren() + 1\r\n          publicref.update({\r\n            by: userAuth.displayName,\r\n            contactMail: userAuth.email,\r\n            timeStamp: timeStamp,\r\n            quizName :quiz,\r\n            views :0,\r\n          })\r\n        }).then(e => {\r\n\r\n          let questionnumber =\"question\"+number\r\n          publicQref.child('/question' + (number)).update({\r\n          question: question,\r\n          questionImageURL: url,\r\n          optionOne: optionOne,\r\n          optionTwo: optionTwo,\r\n          optionThree: optionThree,\r\n          optionFour: optionFour,\r\n          questionnumber:questionnumber,\r\n          \r\n        })\r\n          \r\n    this.setState({ status: \"Attaching Nodes to Question !\" });\r\n          this.setState({ progress: 70 });\r\n        })\r\n      }\r\n      if (!this.state.public) {\r\n        userref = firebase.database().ref('/users/' + userAuth.uid + '/private/' + this.state.quiz + '/')\r\n        userQref = firebase.database().ref('/users/' + userAuth.uid + '/private/' + this.state.quiz + '/q/')\r\n      }\r\n      userQref.once(\"value\").then(function (snapshot) {\r\n        console.log(snapshot.numChildren());\r\n        number = snapshot.numChildren() + 1\r\n        userref.update({\r\n\r\n          by: userAuth.displayName,\r\n          contactMail: userAuth.email,\r\n          timeStamp: timeStamp,\r\n          quizName :quiz\r\n        })\r\n      }).then(() => {\r\n        \r\n        let questionnumber =\"question\"+number\r\n        userQref.child('question' + number).update({\r\n          question: question,\r\n          questionImageURL: url,\r\n          optionOne: optionOne,\r\n          optionTwo: optionTwo,\r\n          optionThree: optionThree,\r\n          optionFour: optionFour,\r\n          questionnumber:questionnumber\r\n        }).finally(()=>{\r\n        \r\n        this.setState({ status: \"Question Saved !\" });\r\n        this.setState({ progress: 100 });\r\n        this.setState({ uploaded: true });\r\n        this.setState({ currentQ: number })\r\n        })\r\n        \r\n        //console.log(error)\r\n      });\r\n\r\n    });\r\n  }\r\n  handleQuizChange = (event) => {\r\n    let vs = \"\"\r\n    vs = event.target.value\r\n    vs = vs.trim();\r\n    vs = vs.replace(/[^a-zA-Z ]/g, \"\")\r\n    this.setState({\r\n      quiz: vs\r\n    });\r\n  }\r\n  handlePublicAssignment = (event) => {\r\n    if (this.state.public) {\r\n      this.setState({\r\n        public: false\r\n      });\r\n    } else {\r\n      this.setState({\r\n        public: true\r\n      });\r\n    }\r\n  }\r\n  handlepopup = () => {\r\n    this.setState({\r\n      uploaded: false\r\n    });\r\n  }\r\n\r\n\r\n\r\n  \r\n\r\n  componentDidMount(){\r\n            \r\n\r\n\r\n    auth.onAuthStateChanged(user => {\r\n        this.setState({name :user.displayName})\r\n\r\n        let quizrefer = firebase.database().ref('/quizes/')\r\n                        let uid=user.uid\r\n                        this.setState({auth : uid})\r\n                quizrefer.on(\"value\", snapshot => {\r\n                    let publicquizlist = [];\r\n                    snapshot.forEach(snap => {\r\n                    // console.log(snap.val())\r\n                    // console.log(snapshot)\r\n                        publicquizlist.push(snap.val());\r\n                    });\r\n                    this.setState({ publicquizlist: publicquizlist });\r\n                    this.setState({showQuizes :true})\r\n                  });\r\n\r\n\r\n    })}\r\n\r\n    handleQuizChoose(name){\r\n          \r\n  \r\n        \r\n    }\r\n  render() {\r\n    return (\r\n      <>\r\n        <section className=\" mx-5 mt-5 pt-3 \">\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          <h1>Quizes Active Now ::</h1>\r\n            <div  >\r\n          {this.state.showQuizes?\r\n          <section className=\"row\">\r\n          {this.state.publicquizlist.map(data =>{ \r\n                             return(\r\n\r\n                                    <Link className=\"boxm m-3 p-3\" to={`/Details/${data.quizName}`}>\r\n                                    <div >\r\n                                      <h4>{data.quizName}</h4>\r\n                                      <h5>{data.by}</h5>\r\n                                      <h5>{data.by}</h5>\r\n                                      </div></Link>\r\n                                      \r\n                             )\r\n\r\n                         })}</section>:null}\r\n\r\n</div>\r\n\r\n              \r\n\r\n\r\n\r\n  </section>\r\n\r\n\r\n\r\n\r\n        \r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n}\r\nexport default Creator"]},"metadata":{},"sourceType":"module"}