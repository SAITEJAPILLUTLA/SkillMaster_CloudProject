{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\SkillMaster_CloudProject\\\\skillmaster\\\\src\\\\Components\\\\creator.js\";\nimport React, { Component } from 'react';\nimport { useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport Footer from \"../Components/footer\";\nimport { useState, useEffect } from 'react';\nimport '../Components/question.css';\nimport '../Components/creatorcss.css';\nimport { UserContext } from \"../providers/UserProvider\";\nimport firebase from \"firebase/app\";\nimport { auth } from \"../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nrequire('firebase/auth');\n\nrequire('firebase/database');\n\nrequire('firebase/storage');\n\nconst storage = firebase.storage();\n\nclass Creator extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleQuestionChange = event => {\n      this.setState({\n        question: event.target.value\n      });\n    };\n\n    this.handleQuestionImageChange = e => {\n      if (e.target.files[0]) {\n        const image = e.target.files[0];\n        this.setState(() => ({\n          image\n        }));\n      }\n    };\n\n    this.handleQuestionImageUpload = () => {\n      const {\n        image\n      } = this.state;\n      const uploadTask = storage.ref(`/images/${Date.now()}`).put(image);\n      uploadTask.on(\"state_changed\", snapshot => {\n        // progress function ...\n        const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n        this.setState({\n          progress\n        });\n      }, error => {\n        // Error function ...\n        console.log(error);\n      }, () => {\n        // complete function ...\n        storage.ref(\"images\").child(image.name).getDownloadURL().then(url => {\n          this.setState({\n            url\n          });\n        });\n      });\n    };\n\n    this.handleSubmit = () => {\n      auth.onAuthStateChanged(userAuth => {\n        firebase.database().ref('/users/' + userAuth.uid + '/').update({\n          name: userAuth.displayName,\n          email: userAuth.email,\n          profileImageURL: userAuth.photoURL,\n          lastLogin: Date.now()\n        });\n      });\n    };\n\n    this.handleQuizChange = event => {\n      this.setState({\n        quiz: event.target.value\n      });\n    };\n\n    this.state = {\n      quiz: '',\n      question: '',\n      image: null,\n      url: \"\",\n      progress: 0,\n      uploaded: false,\n      public: true\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \" mx-4 mt-5 pt-5 \",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"whitefont\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"EnterAssignmentName [Case Sensitive] ::\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: this.state.quiz,\n            onChange: this.handleQuizChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"EnterQuestion ::\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: this.state.question,\n            onChange: this.handleQuestionChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            defaultChecked: this.state.public,\n            onChange: this.handleChangeChk\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            class: \"btn effect01 \",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: this.state.uploaded\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"green-text\",\n            children: \"React Firebase Image Uploader\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"progress\", {\n              value: this.state.progress,\n              max: \"100\",\n              className: \"progress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-field input-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"btn\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"File\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                onChange: this.handleQuestionImageChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-path-wrapper\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"file-path validate\",\n                type: \"text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.handleQuestionImageUpload,\n            className: \"waves-effect waves-light btn\",\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: this.state.url || \"https://via.placeholder.com/400x300\",\n            alt: \"Uploaded Images\",\n            height: \"300\",\n            width: \"400\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nCreator.contextType = UserContext;\nexport default Creator;","map":{"version":3,"sources":["C:/Users/USER/SkillMaster_CloudProject/skillmaster/src/Components/creator.js"],"names":["React","Component","useContext","Redirect","Link","Footer","useState","useEffect","UserContext","firebase","auth","require","storage","Creator","constructor","props","handleQuestionChange","event","setState","question","target","value","handleQuestionImageChange","e","files","image","handleQuestionImageUpload","state","uploadTask","ref","Date","now","put","on","snapshot","progress","Math","round","bytesTransferred","totalBytes","error","console","log","child","name","getDownloadURL","then","url","handleSubmit","onAuthStateChanged","userAuth","database","uid","update","displayName","email","profileImageURL","photoURL","lastLogin","handleQuizChange","quiz","uploaded","public","render","handleChangeChk","contextType"],"mappings":"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","sourcesContent":["\r\n\r\n\r\n\r\nimport React,{Component} from 'react'\r\nimport { useContext } from 'react';\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Link } from 'react-router-dom'\r\nimport Footer from \"../Components/footer\"\r\nimport  { useState, useEffect } from 'react';\r\nimport '../Components/question.css'\r\nimport '../Components/creatorcss.css'\r\nimport { UserContext } from \"../providers/UserProvider\";\r\nimport firebase from \"firebase/app\";\r\nimport { auth } from \"../firebase\"\r\nrequire('firebase/auth');\r\nrequire('firebase/database');\r\nrequire('firebase/storage');\r\n\r\nconst storage = firebase.storage();\r\nclass Creator extends Component{\r\n\r\n\r\n    static contextType = UserContext;\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            quiz:'',\r\n            question:'',\r\n            image:null,\r\n            url: \"\",\r\n            progress: 0,\r\n            uploaded:false,\r\n            public:true\r\n        }\r\n    }\r\n\r\n    handleQuestionChange=(event)=>{\r\n        this.setState({\r\n            question:event.target.value\r\n        });\r\n\r\n    }\r\n    handleQuestionImageChange = e => {\r\n        if (e.target.files[0]) {\r\n          const image = e.target.files[0];\r\n          this.setState(() => ({ image }));\r\n        }\r\n      };\r\n\r\n      handleQuestionImageUpload = () => {\r\n        const { image } = this.state;\r\n        const uploadTask = storage.ref(`/images/${Date.now()}`).put(image);\r\n        uploadTask.on(\r\n          \"state_changed\",\r\n          snapshot => {\r\n            // progress function ...\r\n            const progress = Math.round(\r\n              (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n            );\r\n            this.setState({ progress });\r\n          },\r\n          error => {\r\n            // Error function ...\r\n            console.log(error);\r\n          },\r\n          () => {\r\n            // complete function ...\r\n            storage\r\n              .ref(\"images\")\r\n              .child(image.name)\r\n              .getDownloadURL()\r\n              .then(url => {\r\n                this.setState({ url });\r\n              });\r\n          }\r\n        );\r\n      };\r\n      handleSubmit=()=>{\r\n        auth.onAuthStateChanged(userAuth => {\r\n          firebase.database().ref('/users/'+userAuth.uid+'/').update({\r\n            name : userAuth.displayName,\r\n            email : userAuth.email,\r\n            profileImageURL :userAuth.photoURL,\r\n            lastLogin :Date.now()\r\n        })\r\n        });\r\n      }\r\n      handleQuizChange=(event)=>{\r\n        this.setState({\r\n          quiz:event.target.value\r\n      });\r\n      }\r\n      handlePu\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n\r\n\r\n\r\n            <section className= \" mx-4 mt-5 pt-5 \">\r\n                <form className=\"whitefont\">\r\n                    <div>EnterAssignmentName [Case Sensitive] ::</div>\r\n                    <input value={this.state.quiz} onChange={this.handleQuizChange}/>\r\n                    <div>EnterQuestion ::</div>\r\n                    <textarea value={this.state.question} onChange={this.handleQuestionChange}/>\r\n                \r\n                    <input type=\"checkbox\" defaultChecked={this.state.public} onChange={this.handleChangeChk} />\r\n                    <button type=\"submit\" class=\"btn effect01 \">Send</button>\r\n                        <Link to={this.state.uploaded}></Link>\r\n                </form>\r\n            </section>\r\n\r\n\r\n\r\n            <section>\r\n                \r\n      <div className=\"center\">\r\n          <br/>\r\n          <h2 className=\"green-text\">React Firebase Image Uploader</h2>\r\n          <br/>\r\n          <br/>\r\n        <div className=\"row\">\r\n          <progress value={this.state.progress} max=\"100\" className=\"progress\" />\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <div className=\"file-field input-field\">\r\n          <div className=\"btn\">\r\n            <span>File</span>\r\n            <input type=\"file\" onChange={this.handleQuestionImageChange} />\r\n          </div>\r\n          <div className=\"file-path-wrapper\">\r\n            <input className=\"file-path validate\" type=\"text\" />\r\n          </div>\r\n        </div>\r\n        <button\r\n          onClick={this.handleQuestionImageUpload}\r\n          className=\"waves-effect waves-light btn\"\r\n        >\r\n          Upload\r\n        </button>\r\n        <br />\r\n        <br />\r\n        <img\r\n          src={this.state.url || \"https://via.placeholder.com/400x300\"}\r\n          alt=\"Uploaded Images\"\r\n          height=\"300\"\r\n          width=\"400\"\r\n        />\r\n      </div>\r\n            </section>\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n}\r\nexport default Creator"]},"metadata":{},"sourceType":"module"}