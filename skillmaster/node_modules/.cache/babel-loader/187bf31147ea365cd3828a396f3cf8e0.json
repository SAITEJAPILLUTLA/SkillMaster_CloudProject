{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\SkillMaster_CloudProject\\\\skillmaster\\\\src\\\\Components\\\\modifier.js\";\nimport React, { Component } from 'react';\nimport { useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport Footer from \"../Components/footer\";\nimport { useState, useEffect } from 'react';\nimport '../Components/question.css';\nimport '../Components/creatorcss.css';\nimport '../Components/profilecss.css';\nimport { UserContext } from \"../providers/UserProvider\";\nimport firebase from \"firebase/app\";\nimport { auth } from \"../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nrequire('firebase/auth');\n\nrequire('firebase/database');\n\nrequire('firebase/storage');\n\nclass Modifier extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleQuizChhose = quizName => {\n      this.setState({\n        cquizName: quizName\n      });\n      console.log(this.state);\n      let questions = firebase.database().ref('/users/' + this.state.auth.uid + '/private/' + this.state.cquizName + '/');\n      questions.on(\"value\", snapshot => {\n        let questionslist = [];\n        console.log(\"jdojokk\" + snapshot.val());\n        snapshot.forEach(snap => {\n          console.log(snap.val());\n          questionslist.push(snap.val());\n        });\n        this.setState({\n          questionslist: questionslist\n        });\n      });\n      this.setState({\n        showquestion: true\n      });\n    };\n\n    this.handleQuestionChoose = () => {};\n\n    this.state = {\n      publicquizlist: [],\n      cquizName: '',\n      showquestion: false,\n      qes: [],\n      auth: [],\n      questionslist: []\n    };\n  }\n\n  componentDidMount() {\n    auth.onAuthStateChanged(userAuth => {\n      let refer = firebase.database().ref('/users/' + userAuth.uid + '/private/');\n      let user = [];\n      user.push(userAuth);\n      this.setState({\n        auth: user\n      });\n      refer.on(\"value\", snapshot => {\n        let publicquizlist = [];\n        snapshot.forEach(snap => {\n          // console.log(snap.val())\n          // console.log(snapshot)\n          publicquizlist.push(snap.val());\n        });\n        this.setState({\n          publicquizlist: publicquizlist\n        });\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \" mx-4 mt-5 pt-5 \",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"hellos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row justify-content-center\",\n            children: this.state.publicquizlist.map(data => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"boxm\",\n                onClick: () => {\n                  this.handleQuizChhose(data.quizName);\n                },\n                children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: data.quizName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 114\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }, this), this.state.showquestion ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row justify-content-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"hello\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 25\n            }, this), this.state.publicquizlist.map(data => {\n              if (data.quizName == this.state.cquizName) {\n                let we = JSON.parse(JSON.stringify(data.q));\n                let w = [];\n                w.push(data.q);\n                w.keys();\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"boxm\",\n                  onClick: () => {},\n                  children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                    children: \"ghjkl\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 78\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 37\n                }, this);\n              }\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default Modifier;","map":{"version":3,"sources":["C:/Users/USER/SkillMaster_CloudProject/skillmaster/src/Components/modifier.js"],"names":["React","Component","useContext","Redirect","Link","Footer","useState","useEffect","UserContext","firebase","auth","require","Modifier","constructor","props","handleQuizChhose","quizName","setState","cquizName","console","log","state","questions","database","ref","uid","on","snapshot","questionslist","val","forEach","snap","push","showquestion","handleQuestionChoose","publicquizlist","qes","componentDidMount","onAuthStateChanged","userAuth","refer","user","render","map","data","we","JSON","parse","stringify","q","w","keys"],"mappings":"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","sourcesContent":["\r\nimport React, { Component } from 'react'\r\nimport { useContext } from 'react';\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Link } from 'react-router-dom'\r\nimport Footer from \"../Components/footer\"\r\nimport { useState, useEffect } from 'react';\r\nimport '../Components/question.css'\r\nimport '../Components/creatorcss.css'\r\nimport '../Components/profilecss.css'\r\nimport { UserContext } from \"../providers/UserProvider\";\r\nimport firebase from \"firebase/app\";\r\nimport { auth } from \"../firebase\"\r\nrequire('firebase/auth');\r\nrequire('firebase/database');\r\nrequire('firebase/storage');\r\n\r\n\r\nclass Modifier extends Component{\r\n    constructor(props) {\r\n    \r\n        super(props);\r\n       \r\n        this.state = {\r\n            publicquizlist : [],\r\n            cquizName:'',\r\n            showquestion : false,\r\n            qes:[],\r\n            auth:[],\r\n            questionslist :[]\r\n        }\r\n        }\r\n\r\n\r\n        componentDidMount(){\r\n            \r\n\r\n\r\n            auth.onAuthStateChanged(userAuth => {\r\n\r\n           let refer = firebase.database().ref('/users/' + userAuth.uid + '/private/')\r\n                        let user =[]\r\n                        user.push(userAuth)\r\n                        this.setState({auth : user})\r\n                refer.on(\"value\", snapshot => {\r\n                    let publicquizlist = [];\r\n                    snapshot.forEach(snap => {\r\n                        \r\n                    // console.log(snap.val())\r\n                    // console.log(snapshot)\r\n                        publicquizlist.push(snap.val());\r\n                    });\r\n                    this.setState({ publicquizlist: publicquizlist });\r\n                  });\r\n                \r\n        })}\r\n\r\n         handleQuizChhose=(quizName)=>{\r\n            this.setState({cquizName :quizName})\r\n\r\n            console.log(this.state)\r\n            let questions = firebase.database().ref('/users/' + this.state.auth.uid + '/private/'+this.state.cquizName+'/')\r\n            questions.on(\"value\", snapshot => {\r\n                let questionslist =[];\r\n                console.log(\"jdojokk\"+snapshot.val())\r\n                snapshot.forEach(snap => {\r\n                        \r\n                     console.log(snap.val())\r\n                     \r\n                    questionslist.push(snap.val());\r\n                    \r\n                    });\r\n                    this.setState({questionslist :questionslist})\r\n                    \r\n            })\r\n            this.setState({showquestion :true})\r\n        }\r\n        handleQuestionChoose=()=>{\r\n\r\n        }\r\n\r\n        render(){\r\n            return(\r\n                <>\r\n                <div >\r\n\r\n                <section className=\" mx-4 mt-5 pt-5 \">\r\n                    <h1>hellos</h1>\r\n                    <div className=\"row justify-content-center\">\r\n                         {this.state.publicquizlist.map(data =>{ \r\n                             return(\r\n                                    <div className=\"boxm\" onClick={()=>{  this.handleQuizChhose(data.quizName)}}><h4>{data.quizName}</h4></div>\r\n                             )\r\n\r\n                         })}\r\n                    </div>\r\n\r\n                    {this.state.showquestion ?\r\n                    <div className=\"row justify-content-center\" >\r\n\r\n                        <div>hello</div>\r\n                         {this.state.publicquizlist.map((data) =>{                              \r\n                             if(data.quizName==this.state.cquizName){\r\n                                \r\n                                let we =JSON.parse(JSON.stringify(data.q))\r\n                                let w = []\r\n                                w.push(data.q)\r\n\r\n                                w.keys();\r\n                                \r\n\r\n                                return(\r\n                                    <div className=\"boxm\" onClick={()=>{  }}><h4>ghjkl</h4></div>) \r\n                                }\r\n                             \r\n\r\n                         })}\r\n                    </div> :null}\r\n                </section>\r\n                </div>\r\n                </>\r\n            )\r\n        }\r\n}\r\n\r\n\r\nexport default Modifier\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}