{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\SkillMaster_CloudProject\\\\skillmaster\\\\src\\\\Components\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport '../Components/home.css';\nimport signInWithGoogle from \"../providers/UserProvider\";\nimport firebase from \"firebase/app\";\nimport Footer from \"../Components/footer\";\nimport { auth } from \"../firebase\";\nimport { UserContext } from \"../providers/UserProvider\";\nimport Features from \"../Components/features\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  constructor(props);\n  const provider = new firebase.auth.GoogleAuthProvider();\n  const user = useContext(UserContext);\n\n  const loadQuizes = () => {\n    auth.onAuthStateChanged(userAuth => {\n      const quizref = firebase.database().ref('/quizes/');\n      quizref.on(\"value\", snapshot => {\n        let publicquizlist = [];\n        snapshot.forEach(snap => {\n          publicquizlist.push(snap.val());\n        });\n        this.setState({\n          publicquizlist: publicquizlist\n        });\n        this.setState({\n          showquizes: true\n        });\n      });\n    });\n  };\n\n  console.log(user);\n\n  if (user != null) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \" mt-5 \",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mainSec \",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: user.photoURL\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 row justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/Instructions\",\n            className: \"btn effect01\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Hey \", user.displayName, \" Let's Start our Quest\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 64\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"whitefont mt-4 row justify-content-center\",\n          children: [\"Helllo \", user.displayName, \",\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Features, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), this.setState.showquizes ? /*#__PURE__*/_jsxDEV(\"section\", {\n          children: this.state.publicquizlist.map(data => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"boxm\",\n                onClick: () => {\n                  this.handleQuestionChoose(data);\n                },\n                children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: data.quizName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 109\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 40\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 39\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/ProfilePage\",\n        className: \"mx-5 px-5 btn effect01 my-4\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 74\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/LoginCSI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 10\n    }, this);\n  }\n}\n\n_s(Home, \"T/slviYl6xUb2nQaiedYLY1KgOo=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/USER/SkillMaster_CloudProject/skillmaster/src/Components/Home.js"],"names":["React","useState","useEffect","useContext","Redirect","Link","signInWithGoogle","firebase","Footer","auth","UserContext","Features","Home","constructor","props","provider","GoogleAuthProvider","user","loadQuizes","onAuthStateChanged","userAuth","quizref","database","ref","on","snapshot","publicquizlist","forEach","snap","push","val","setState","showquizes","console","log","photoURL","displayName","state","map","data","handleQuestionChoose","quizName"],"mappings":"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","sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useContext } from 'react';\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport '../Components/home.css'\r\nimport signInWithGoogle  from \"../providers/UserProvider\";\r\nimport firebase from \"firebase/app\";\r\nimport Footer from \"../Components/footer\"\r\n\r\nimport { auth } from \"../firebase\"\r\n\r\nimport { UserContext } from \"../providers/UserProvider\";\r\nimport Features from \"../Components/features\"\r\n\r\n\r\n\r\n\r\n\r\nfunction Home() {    \r\n  constructor(props)\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n  \r\n    \r\n  const user = useContext(UserContext);\r\n  const loadQuizes=()=>{\r\n    \r\n    auth.onAuthStateChanged(userAuth => {\r\n          const quizref =firebase.database().ref('/quizes/')\r\n          \r\n          quizref.on(\"value\", snapshot => {\r\n            \r\n            let publicquizlist = [];\r\n            snapshot.forEach(snap => {\r\n              publicquizlist.push(snap.val());\r\n          });\r\n          this.setState({ publicquizlist: publicquizlist });\r\n          this.setState({showquizes:true})\r\n          })\r\n\r\n    })\r\n  }\r\n  \r\nconsole.log(user)\r\n  if(user!=null){\r\n    return (\r\n        <>\r\n        <section className=\" mt-5 \">\r\n            <div className=\"row justify-content-center\">\r\n\r\n            <div className=\"mainSec \">\r\n\r\n            <div>\r\n                <img src={user.photoURL}></img>\r\n                </div>\r\n                \r\n            </div>\r\n\r\n            </div>\r\n            <div className=\"mt-4 row justify-content-center\">\r\n            <Link to='/Instructions' className=\"btn effect01\" ><span>Hey {user.displayName} Let's Start our Quest</span>\r\n                </Link>\r\n\r\n\r\n            {/* <Link to='/ProfilePage' className=\"btn effect01\" ><span>ProfilePage</span>\r\n                </Link>      */}          \r\n        </div>\r\n            <div className=\"whitefont mt-4 row justify-content-center\">\r\n              Helllo {user.displayName}, \r\n            </div>\r\n\r\n            <Features/>\r\n\r\n            {this.setState.showquizes?<section>\r\n              {this.state.publicquizlist.map((data) =>{    \r\n                                return(<div>\r\n                                    <div className=\"boxm\" onClick={()=>{ this.handleQuestionChoose(data) }}><h4>{data.quizName}</h4></div>\r\n                                    </div>) \r\n                         })}\r\n            </section>:null}\r\n        \r\n          </section>\r\n          \r\n        <Link to='/ProfilePage' className=\"mx-5 px-5 btn effect01 my-4\" ><span>Profile</span></Link> \r\n          <Footer/>\r\n        </>\r\n    )\r\n}\r\nelse{\r\n\r\n  return <Redirect to=\"/LoginCSI\" />\r\n}}\r\n\r\nexport default Home\r\n"]},"metadata":{},"sourceType":"module"}