{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\SkillMaster_CloudProject\\\\skillmaster\\\\src\\\\Components\\\\modifier.js\";\nimport React, { Component } from 'react';\nimport { useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport Footer from \"../Components/footer\";\nimport { useState, useEffect } from 'react';\nimport '../Components/question.css';\nimport '../Components/creatorcss.css';\nimport '../Components/profilecss.css';\nimport { UserContext } from \"../providers/UserProvider\";\nimport firebase from \"firebase/app\";\nimport { auth } from \"../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nrequire('firebase/auth');\n\nrequire('firebase/database');\n\nrequire('firebase/storage');\n\nclass Modifier extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleQuizChoose = quizName => {\n      this.setState({\n        cquizName: quizName\n      });\n      console.log(this.state.cquizName);\n      console.log(this.state.auth);\n      let questions = firebase.database().ref('/users/' + this.state.auth + '/private/' + quizName + '/q');\n      questions.on(\"value\", snapshot => {\n        let questionslist = [];\n        snapshot.forEach(snap => {\n          //console.log(snap.val())\n          questionslist.push(snap.val());\n        });\n        this.setState({\n          questionslist: questionslist\n        });\n      });\n      this.setState({\n        showquestion: true\n      });\n    };\n\n    this.handleQuestionChoose = q => {\n      this.setState({\n        cquestion: q\n      });\n      this.setState({\n        showfullquestion: true\n      });\n    };\n\n    this.handlecquestionchange = event => {\n      this.setState({\n        cquestion: event.target.value\n      });\n    };\n\n    this.state = {\n      publicquizlist: [],\n      cquizName: '',\n      showquestion: false,\n      qes: [],\n      auth: [],\n      questionslist: [],\n      showfullquestion: true,\n      cquestion: ''\n    };\n  }\n\n  componentDidMount() {\n    auth.onAuthStateChanged(userAuth => {\n      let refer = firebase.database().ref('/users/' + userAuth.uid + '/private/');\n      let uid = userAuth.uid;\n      this.setState({\n        auth: uid\n      });\n      refer.on(\"value\", snapshot => {\n        let publicquizlist = [];\n        snapshot.forEach(snap => {\n          // console.log(snap.val())\n          // console.log(snapshot)\n          publicquizlist.push(snap.val());\n        });\n        this.setState({\n          publicquizlist: publicquizlist\n        });\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \" mx-4 mt-5 pt-5 \",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"hellos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row justify-content-center\",\n            children: this.state.publicquizlist.map(data => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"boxm\",\n                onClick: () => {\n                  this.handleQuizChoose(data.quizName);\n                },\n                children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: data.quizName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 114\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 21\n          }, this), this.state.showquestion ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row justify-content-center\",\n            children: [this.state.questionslist.map(data => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"boxm\",\n                  onClick: () => {\n                    this.handleQuestionChoose(data.question);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                    children: data.question\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 118\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 40\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"boxm\",\n              onClick: () => {},\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"ADD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 67\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 26\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 21\n          }, this) : null, this.state.showfullquestion ? /*#__PURE__*/_jsxDEV(\"section\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Question ::\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: this.state.cquestion,\n              onChange: this.handlecquestionchange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Question ::\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: this.state.cquestion,\n              onChange: this.handlecquestionchange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 50\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default Modifier;","map":{"version":3,"sources":["C:/Users/USER/SkillMaster_CloudProject/skillmaster/src/Components/modifier.js"],"names":["React","Component","useContext","Redirect","Link","Footer","useState","useEffect","UserContext","firebase","auth","require","Modifier","constructor","props","handleQuizChoose","quizName","setState","cquizName","console","log","state","questions","database","ref","on","snapshot","questionslist","forEach","snap","push","val","showquestion","handleQuestionChoose","q","cquestion","showfullquestion","handlecquestionchange","event","target","value","publicquizlist","qes","componentDidMount","onAuthStateChanged","userAuth","refer","uid","render","map","data","question"],"mappings":"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","sourcesContent":["\r\nimport React, { Component } from 'react'\r\nimport { useContext } from 'react';\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Link } from 'react-router-dom'\r\nimport Footer from \"../Components/footer\"\r\nimport { useState, useEffect } from 'react';\r\nimport '../Components/question.css'\r\nimport '../Components/creatorcss.css'\r\nimport '../Components/profilecss.css'\r\nimport { UserContext } from \"../providers/UserProvider\";\r\nimport firebase from \"firebase/app\";\r\nimport { auth } from \"../firebase\"\r\nrequire('firebase/auth');\r\nrequire('firebase/database');\r\nrequire('firebase/storage');\r\n\r\n\r\nclass Modifier extends Component{\r\n    constructor(props) {\r\n    \r\n        super(props);\r\n       \r\n        this.state = {\r\n            publicquizlist : [],\r\n            cquizName:'',\r\n            showquestion : false,\r\n            qes:[],\r\n            auth:[],\r\n            questionslist :[],\r\n            showfullquestion:true,\r\n            cquestion:''\r\n        }\r\n        }\r\n\r\n\r\n        componentDidMount(){\r\n            \r\n\r\n\r\n            auth.onAuthStateChanged(userAuth => {\r\n\r\n           let refer = firebase.database().ref('/users/' + userAuth.uid + '/private/')\r\n                        let uid=userAuth.uid\r\n                        this.setState({auth : uid})\r\n                refer.on(\"value\", snapshot => {\r\n                    let publicquizlist = [];\r\n                    snapshot.forEach(snap => {\r\n                    // console.log(snap.val())\r\n                    // console.log(snapshot)\r\n                        publicquizlist.push(snap.val());\r\n                    });\r\n                    this.setState({ publicquizlist: publicquizlist });\r\n                  });\r\n        })}\r\n\r\n         handleQuizChoose=(quizName)=>{\r\n             \r\n            this.setState({cquizName :quizName})\r\n\r\n            console.log(this.state.cquizName)\r\n            console.log(this.state.auth)\r\n            let questions = firebase.database().ref('/users/' + this.state.auth + '/private/'+quizName+'/q')\r\n            questions.on(\"value\", snapshot => {\r\n                let questionslist =[];\r\n                snapshot.forEach(snap => {\r\n                        \r\n                     //console.log(snap.val())\r\n                     \r\n                    questionslist.push(snap.val());\r\n                    \r\n                    });\r\n                    this.setState({questionslist :questionslist})\r\n                    \r\n            })\r\n            this.setState({showquestion :true})\r\n        }\r\n        handleQuestionChoose=(q)=>{\r\n            \r\n            this.setState({cquestion :q})\r\n                this.setState({showfullquestion :true})\r\n        }\r\n        handlecquestionchange=(event)=>{\r\n\r\n            this.setState({cquestion :event.target.value})\r\n        }\r\n\r\n        render(){\r\n            return(\r\n                <>\r\n                <div >\r\n\r\n                <section className=\" mx-4 mt-5 pt-5 \">\r\n                    <h1>hellos</h1>\r\n                    <div className=\"row justify-content-center\">\r\n                         {this.state.publicquizlist.map(data =>{ \r\n                             return(\r\n                                    <div className=\"boxm\" onClick={()=>{  this.handleQuizChoose(data.quizName)}}><h4>{data.quizName}</h4></div>\r\n                             )\r\n\r\n                         })}\r\n                    </div>\r\n\r\n                    {this.state.showquestion ?\r\n                    <div className=\"row justify-content-center\" >\r\n\r\n                         {this.state.questionslist.map((data) =>{    \r\n                                return(<div>\r\n                                    <div className=\"boxm\" onClick={()=>{ this.handleQuestionChoose(data.question) }}><h4>{data.question}</h4></div>\r\n                                    </div>) \r\n                                \r\n                             \r\n\r\n                         })}\r\n                         <div className=\"boxm\" onClick={()=>{  }}><h4>ADD</h4></div>\r\n                                    \r\n                    </div> :null}\r\n                    {this.state.showfullquestion?<section>\r\n                            <span>Question ::</span>\r\n                            <textarea value={this.state.cquestion} onChange={this.handlecquestionchange}></textarea>\r\n                            <span>Question ::</span>\r\n                            <textarea value={this.state.cquestion} onChange={this.handlecquestionchange}></textarea>\r\n                    </section>:null}\r\n                </section>\r\n                </div>\r\n                </>\r\n            )\r\n        }\r\n}\r\n\r\n\r\nexport default Modifier\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}